name: Publish SDK Utils Container image

on:
  push:
    paths:
      - 'utils/**'
  workflow_dispatch:
    inputs:
      publish_as_latest:
        description: 'Should this version be tagged as latest?'
        required: false
        type: boolean
        default: false
  workflow_call:
    inputs:
      publish_as_latest:
        description: 'Should this version be tagged as latest?'
        required: false
        type: boolean
        default: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        id: build_and_push
        uses: docker/build-push-action@v6
        with:
          context: utils
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/k0gen/sdk/utils:${{ github.sha }}-amd64
            ghcr.io/k0gen/sdk/utils:${{ github.sha }}-arm64
            ghcr.io/k0gen/sdk/utils:${{ github.sha }}
            ghcr.io/k0gen/sdk/utils:${{ github.run_number }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,new=true

      - name: Tag as latest if requested
        if: ${{ github.event.inputs.publish_as_latest }}
        run: |
          # Ensure SHA-tagged images are available locally
          docker pull ghcr.io/k0gen/sdk/utils:${{ github.sha }}-amd64
          docker pull ghcr.io/k0gen/sdk/utils:${{ github.sha }}-arm64
          
          # Create and push the manifest tagged as 'latest'
          docker manifest create ghcr.io/k0gen/sdk/utils:latest \
            --amend ghcr.io/k0gen/sdk/utils:${{ github.sha }}-amd64 \
            --amend ghcr.io/k0gen/sdk/utils:${{ github.sha }}-arm64
          docker manifest push ghcr.io/k0gen/sdk/utils:latest
